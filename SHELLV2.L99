                        ;
                        ;*******************************************************************
                        ;
                        ;**************  Original Version *********************************
                        ;* Small/Shell: Version 1.0
                        ;*              A command processor for North Star DOS
                        ;*
                        ;* Copyright    1981  J. E. Hendrix
                        ;*              All rights reserved
                        ;
                        ;* Written for PDS assembler
                        ;*************  TMS 9900 Version  *******************************************
                        ;
                        ;	SHELL VER 2.0.00
                        ;	FOR THE TMS9900 SERIES COMPUTER
                        ;	MODERN REVS	
                        ;	01. ADDED FILENAME EXTENSION HANDLING 4 JUNE 2010
                        ;	02  ADDED INTERNAL COMMANDS, DIR, SAVE, ERA
                        ;*********************************************************************
                        ;
  0000                  R0	EQU	0
  0001                  R1	EQU	1
  0002                  R2	EQU	2
  0003                  R3	EQU	3
  0004                  R4	EQU	4
  0005                  R5	EQU	5
  0006                  R6	EQU	6
                        ;R7	EQU	7   CAN'T USE R7 AS IT IS RESERVED
  0008                  R8	EQU	8
  0009                  R9	EQU	9
  000A                  R10	EQU	10
  000B                  R11	EQU	11
  000C                  R12	EQU	12
  000D                  WP	EQU	13
  000E                  R14	EQU	14
  000F                  R15	EQU	15
  000A                  SP	EQU	10
                        ;
                        ;----Define  Extended Operations
                        ;
                        ;	DEFINE SOME XOP'S
                        ;
                        	DXOP	PUSHREG,4
                        	DXOP	POPREG,5	
                        	DXOP	CALL,6
                        	DXOP	RET,7
                        	DXOP	PUSH,8
                        	DXOP	POP,9
                        	DXOP	WHEX,10		;WRITE OUT A 16 BIT HEX VALUE
                        	DXOP	RHEX,11		;READ IN A 16 BIT HEX VALUE
                        	DXOP	WRITE,12		;WRITE CHAR IN MSB
                        	DXOP	READ,13		;READ CHAR IN MSB
                        	DXOP	MESG,14		;OUTPUT NULL TERMINATED MESSAGE
                        ;
                        ;
                        ;---TPA------->0100H
                        
                        
                        ;**********LOW MEMORY GLOBALS
                        ;
                        ;  SHELL VECTOR		080H
                        ;  BDOS VECTOR		084H
                        ;  COMMAND LINE POINTER		0A0H
                        ;  COMMAND LINE SIZE		0A2H
                        ;  SYSTEM BUFFER ADDRESS	0A4H		;ADDRESS OF SYSTEM BUFFER
                        ;  FREE MEMORY POINTER		0A6H
                        ;
                        ; OPERATING SYSTEM EQUATES
                        
                        ;
  C300                  SHELL:	EQU	0C300H
  D100                  BDOS:	EQU	0D100H
  F000                  MONITOR:	EQU	0F000H
                        
                        
  C300                  	AORG	SHELL
  C2FE                  STACKP	EQU	$-2		;STACK LOCATION
                        
                        ;SET LOCATION OF STACK.  SHELL ALLOCATES STACK FOR ALL PROGRAMMES
                        ;
                        
  C300   0460 C31A      	B	@INIT		;COLD START
                        ;
                        ;EQUATES	TABLE
                        ;
  00A0                  CMDL_PTR:	EQU	0A0H		;ADDRESS OF SYSTEM COMMAND LINE
  00A2                  CMDL_SIZE:	EQU	0A2H		;WORD HOLDS THE LENGTH OF THE COMMAND LINE
  00A4                  BUFVECT: 	EQU	0A4H		;ADDRESS OF SYSTEM BUFFER
  00A6                  FREEMEM:	EQU	0A6H		;FREE MEMORY ADDRESS - USED IN MONITOR
  0200                  BUFFSIZ:	EQU	512		;ADD TWO BYTES AS A SAFETY BUFFER
                        ;
  0080                  SHELLBV:	EQU	80H		;SHELL VECTORS
  0084                  BDOSV:	EQU	84H		;BDOS VECTORS (Workspace vector is not used)
                        ;
  0040                  CLSZ:	EQU	64		;MAX LENGTH OF COMMAND LINE
  0100                  TPA:	EQU	0100H		;DEFAULT RUN ADDRESS
  F000                  TIMON:	EQU	0F000H
  0200                  BYTSEC:	EQU	512		;BYTES/SECTOR
                        
                        ;
                        ; ALL SYSTEM CALLS ARE TO BDOS ONLY AND NO CALLS TO THE MONITOR ARE PERMITTED
                        ;
  0001                  CIN	EQU	1
  0002                  COUT	EQU	2			;CONSOLE OUTPUT
  000E                  SELDSK	EQU	14
  0014                  RDSEQ	EQU	20
  000F                  FOPEN	EQU	15
  0010                  FCLOSE	EQU	16
  0011                  SEARCH1	EQU	17
  0012                  SEARCH2	EQU	18
  0013                  ERAFIL	EQU	19
  0015                  WRSEQ	EQU	21
  0016                  MAKFIL	EQU	22
  001A                  SETDMA	EQU	26	 	;
  0000                  HDERR	EQU	0		;HARD DISK ERROR BRANCH
  0000                  DOSERR	EQU	0		;DLOOK FILENAME ERROR BRACH
                        ;
                        ;
                        ;---FCB	EQUATES
                        ;
  0000                  NAM	EQU	0	
  000B                  FTY	EQU	11			;TYPE 
  0010                  FLA	EQU	16			;FILES LOAD ADDRESS
  001A                  CRN	EQU	26	 		;NEXT RECORD TO READ/WRITE 
  0018                  CBN	EQU	24	 		;CURRENT BLOCK NUMBER
  001C                  RELB	EQU	28			;RANDOM ACCESS RELATIVE BLOCK NUMBER
  001E                  RELR	EQU	30			;RELATIVE RECORD NUMBER
  000C                  FSB	EQU	12			;FILE STARTING BLOCK
  000E                  FSZ	EQU	14			;FILE SIZE IN SECTORS
                        ;
                        ;-----------------------------
                        ; MISC. ASSEMBLY CONSTANTS
                        ;-----------------------------
                        ;
  0200                  BLKSIZ	EQU	512			;DISK BLOCK SIZE
  000B                  NAMSIZ	EQU	11			;DIRECTORY NAME SIZE
  0003                  EXTSIZ	EQU	3			;EXTENSION SIZE
  0001                  DDEN	EQU	1			;DRIVE DENSITY
  0001                  DCOMR	EQU	1			;DOS READ COMMAND
  0000                  PAD	EQU	0			;SMALL-VM PAD CHAR
  C304   03             CTLC	BYTE	03H	 		;^C
  C305   18             CTLX	BYTE    	18H	 		;^X
  C306   13             CTLS	BYTE	13H			;^S
  C307   19             CTLY	BYTE	19H			;^Y
  C308   1A             CTLZ	BYTE	1AH			;^Z
  C309   20             SPACE	BYTE	20H			;SPACE CHAR
  C30A   00             	BYTE	0			;ALLOWS IT TO BE USED IN MESSAGES
  C30B   08             BS	BYTE	08H			;BACK SPACE
  C30C   0D             CR	BYTE	0DH
  C30D   0A             LF	BYTE	0AH
  C30E   07             DEL	BYTE	07H					;DELETE CHAR
  C30F   FF             EOF	BYTE	0FFH			;END OF FILE 
  C310   3A             COMT	BYTE	3AH	 		;COMMENT FLAG
  C311   2E             JUMP	BYTE	'.'	 		;JUMP TO LOADED PROG
  C312   2E             NULPARM	BYTE	'.'			;NULL PARAMETER FLAG
  C313   2E             EXT	BYTE	'.'			;EXTENSION 
  C314   5F             NOTE	BYTE	'_'	 		;OPERATOR NOTE FLAG
  C315   25             PROM	BYTE 	'%'	 		;PROMPT CHAR
  C316   24             SUBMARK	BYTE	'$'	 		;MARKS SYMBOLIC PARAM IN PROC FILE
  C317   2A             SYSFILE	BYTE	'*'	 		;IDENTIFIES A SYSTEM FILE
  C318   2B             DOSCMD	BYTE	'+'			;DOS COMMAND
  0000                  CONSOLE	EQU	0			;CONSOLE DEVICE
  0002                  EXEC	EQU	2			;TYPE OF EXECUTABLE FILE
  0005                  PROC	EQU	5		 	;TYPE OF PROCEDURE FILE
  0000                  DEFDRV	EQU	0			;DEFAULT DRIVE FOR PROC
                        ;
                        ;	INITIALISATION - SET UP LOCAL AND PROGRAMME WORKSPACE AND VECTORS AND THEN CALL 
                        ;	MONITOR
                        ;	PROGRAMMES THAT CHANGE WORKSPACE CANNOT ENTER VIA RETURN BUT MUST COME THROUGH HERE
                        ;	HAVE COME HERE THROUGH A WARM BOOT/MONITOR AND THAT INTERRUPT VECTORS ARE SET
                        ;
  C319   00             	EVEN
  C31A   02E0 CFA0      INIT	LWPI	WORKSP		;USE LOCAL WORKSPACE
  C31E   020A C2FE      	LI	SP,STACKP		;STACK LOCATION
  C322   D820 C30C      	MOVB	@CR,@CMDLINE	;NO AUTOBOOT AT PRESENT
  C326   CC3A           
  C328   0200 CC3A      	LI	R0,CMDLINE
  C32C   C800 00A0      	MOV	R0,@CMDL_PTR	;COMMAND LINE POINTER
  C330   04E0 00A2      	CLR	@CMDL_SIZE		;ZERO THE COMMAND LINE SIZE
                        ;	LI	R0,CMDL_SIZE	;PATCH THE COMMAND LINE SIZE VECTOR
                        ;	MOV	R0,@CMDL_SIZE_PTR
  C334   0200 CCA4      	LI	R0,MBUF		;SYSTEM BUFFER
  C338   C800 00A4      	MOV	R0,@BUFVECT
                        ;
                        ; PATCH SHELL RETURN VECTOR 
                        ;
  C33C   0200 0460      INIT22	LI	R0,0460H		;BRANCH INSTRUCTION 
  C340   0201 C4CE      	LI	R1,RETURN		;INSERT BRANCH VECTORS	
  C344   C800 0080      	MOV	R0,@SHELLBV
  C348   C801 0082      	MOV	R1,@SHELLBV+2
                        ;
                        ; PATCH BDOS VECTORS - NOTE THE WORKSPACE IS NOT USED
                        ;
  C34C   0200 0460      	LI	R0,0460H		;BRANCH OPCODE
  C350   0201 D100      	LI	R1,BDOS		;ADDRESS OF BDOS IN MEMORY
                        
  C354   C800 0084      	MOV	R0,@BDOSV		;BDOS BRANCH VECTOR INSTRUCTION
  C358   C801 0086      	MOV	R1,@BDOSV+2		;BDOS VECTOR
                        ;
                        ; 	PATCH FREEM MEMORY VECTORS
                        ; 	TOP OF FREE MEMORY - RESET BY SHELL WHEN LOADING PROGS FROM DOS
                        ;
  C35C   0200 0100      	LI	R0,0100H		;START OF FREEMEM WHEN NO PROGRAMMES ARE LOADED
  C360   C800 00A6      	MOV	R0,@FREEMEM
                        ;
                        ; NOW SIGN ON
                        ;
  C364   2FA0 CEAA      	MESG	@SINON		;PRINT SIGN ON MESSAGE
                        ;
                        ;	FALL INTO DOCMD
                        ;
                        ;---------------------------------------
                        ;	DO NEXT SHELL COMMAND
                        ;---------------------------------------
                        ;
  C368   C020 CC2E      DOCMD	MOV	@SKIPSW,R0	 	;SKIP THIS CMD?
  C36C   04E0 CC2E      	CLR	@SKIPSW
  C370   C000           	MOV	R0,R0
  C372   1616           	JNE	DOCMD2A		;YES
  C374   04C1           	CLR	R1
  C376   D060 CC3A      	MOVB	@CMDLINE,R1
  C37A   9801 C30C      	CB	R1,@CR		;IS 1ST BYTE OF CMD A CR ?
  C37E   1310           	JEQ	DOCMD2A	 	;YES-IGNORE CMD
  C380   0281 0000      CHKSYS	CI	R1,0		;(MUST USE TWO WORDS) SYS FILE?<<ALTERED AFTER BOOT>>
  C384   1602           	JNE	DOCMD1	 	;NO
  C386   0460 CAC2      	B	@CMDERR	 	;YES
                        ;
                        ;	RETURN TO MONITOR ?
                        ;
  C38A   9801 C305      DOCMD1	CB	R1,@CTLX	 	;^X?
  C38E   1602           	JNE	DOCMDAA		 ;NO
  C390   0420 F000      	BLWP	@MONITOR
  C394   9801 C307      DOCMDAA	CB	R1,@CTLY		;^Y
  C398   1600           	JNE	DOCMD2
                        ;
                        ;
                        ;	LEADING CHAR <=SPACE ?
                        ;
  C39A   9801 C309      DOCMD2	CB	R1,@SPACE	 
  C39E   1B02           	JH	DOCMD4		;NO
                        ;
  C3A0   0460 C4F4      DOCMD2A	B	@NEXTCMD	 	;YES
                        ;
                        ;  TO JUMP TO THE LAST LOADED PROGRAMME AT TPA, JUST TYPE '.'.  TO LOAD
                        ;  A PROGRAMME FROM DISC, THEN TYPE '.PROGRAMME NAME'
                        ;
  C3A4   9801 C311      DOCMD4	CB	R1,@JUMP		;'.'
  C3A8   1606           	JNE	DOCMD3	
  C3AA   0203 CC3B      	LI	R3,CMDLINE+1
  C3AE   9813 C309      	CB	*R3,@SPACE		;2ND BYTE A GRAPHIC?
  C3B2   1B0E           	JH	DLOOK1	 	;YES,LOAD
  C3B4   107A           	JMP	GOPROG	 	;NO,JUMP
                        ;
                        ;******************************************
                        ;
                        ;	DOS COMMAND  '+FILENAME'
                        ;
                        ;********************************************
                        ;
  C3B6   9801 C318      DOCMD3	CB	R1,@DOSCMD
  C3BA   1602           	JNE	LOOK	
                        ;
                        ; PROCESS DOS COMMAND HERE
                        ;
                        DOCMD9	;MAY USE LATER
  C3BC   0460 C4CE      	B	@RETURN
                        ;	
                        ;
                        ;	LOOKUP NAMED FILE
                        ;
  C3C0   0203 0000      LOOK	LI	R3,DEFDRV
  C3C4   0202 000E      	LI	R2,SELDSK
  C3C8   2DA0 D100      	CALL	@BDOS
  C3CC   0203 CC3A      	LI	R3,CMDLINE	 	;R3->FILENAME
  C3D0   0204 CFC0      DLOOK1	LI	R4,FCB	 	;POINT TO FCB
  C3D4   0202 000B      	LI	R2,NAMSIZ 		;NAME LENGTH
  C3D8   9813 C309      DLOOK2	CB	*R3,@SPACE
  C3DC   1212           	JLE	DLOOK3	 	;NON GRAPHIC
                        ;
                        ;DETECT FILE EXTENSION - IF NONE ASSUME .EXE/COM
                        ;
  C3DE   9813 C313      	CB	*R3,@EXT		;'.'?
  C3E2   160B           	JNE	DLOOK5
                        ;
                        ;	PAD TO FILL TO EXT - ASSUME USER WILL ALWAYS TYPE IN EXTENSION IF NEEDED
                        ;	THIS ALLOWS RUN.EXE TO BE PADDED TO 'RUN     EXE'
                        ;
  C3E4   0583           	INC	R3		;JUMP OVER '.'
  C3E6   0222 FFFD      	AI	R2,-EXTSIZ		;EXTENSION ARE 3 BYTES LONG
  C3EA   1A37           	JL	LOOKERR		;ASSUME EXT IS PART OF FILENAME
  C3EC   1304           	JEQ	DLOOK7
  C3EE   DD20 C309      DLOOK6	MOVB	@SPACE,*R4+ 	;PAD WITH SPACES
  C3F2   0602           	DEC	R2
  C3F4   16FC           	JNE	DLOOK6
  C3F6   0202 0003      DLOOK7	LI	R2,EXTSIZ		;RESET TO COPY EXTENSION CHARS
  C3FA   DD33           DLOOK5	MOVB	*R3+,*R4+		;No
  C3FC   0602           	DEC	R2
  C3FE   16EC           	JNE	DLOOK2	 	;KEEP GOING
  C400   1004           	JMP	DLOOK4
  C402   DD20 C309      DLOOK3	MOVB	@SPACE,*R4+ 	;PAD WITH SPACES
  C406   0602           	DEC	R2
  C408   16FC           	JNE	DLOOK3
  C40A   2DA0 C5BC      DLOOK4	CALL	@ICMD		;LOOK FOR INTERNAL COMMAND
  C40E   0203 CFC0      	LI	R3,FCB	 	;SET FDC PTR
  C412   0202 0011      	LI	R2,SEARCH1		;SEARCH RETURNS WITH R3->DIRECTORY ENTRY
  C416   2DA0 D100      	CALL	@BDOS	 	;TRY TO FIND A FILE
  C41A   C041           	MOV	R1,R1	 	;SUCCESS ?
  C41C   111E           	JLT	LOOKERR		;NO FILES ON DISC
  C41E   0202 000F      	LI	R2,FOPEN		;SEARCH RETURNS WITH R3->DIRECTORY ENTRY
  C422   0203 CFC0      	LI	R3,FCB
  C426   2DA0 D100      	CALL	@BDOS		;OPEN FILE
  C42A   C041           	MOV	R1,R1		;FOUND?
  C42C   1116           	JLT	LOOKERR	 	;NO
  C42E   0204 CFC0      	LI	R4,FCB
  C432   C103           	MOV	R3,R4			;COPY FCB
  C434   C824 000E      	MOV	@FSZ(R4),@MFSZ 		;FILE SIZE
  C438   CC92           
  C43A   D024 000B      	MOVB	@FTY(R4),R0
  C43E   0980           	SRL	R0,8
  C440   C800 CC90      	MOV	R0,@MFTY		; 
  C444   130C           	JEQ	LOAD			;ZERO BYPASSES CHECKS
  C446   0240 0007      	ANDI	R0,7	 		;MASK TYPE BITS 
  C44A   0280 0002      	CI	R0,2			;EXECUTABLE ? 
  C44E   1307           	JEQ	LOAD	 		;YES 
  C450   0280 0005      	CI	R0,5	 		;PROCEDURE TYPE? 
  C454   1602           	JNE	LOOKERR			;NO
  C456   0460 CB08      	B	@DOPROC
  C45A   0460 CAC2      LOOKERR	B	@CMDERR	 		;NO-TOO BAD
                        ;
                        ;	LOAD EXECUTABLE	FILE
                        ;
  C45E   04C1           LOAD	CLR	R1	 		;DISABLE PROG REENTRY
  C460   D801 CC38      	MOVB	R1,@CMDLINE-2
  C464   0204 CFC0      	LI	R4,FCB
  C468   C0E4 0010      	MOV	@FLA(R4),R3		;GET LOAD ADDRESS
  C46C   1602           	JNE	LOAD2			;IF LOAD ADDRESS ZERO USE TPA
  C46E   0203 0100      	LI	R3,TPA			;LOAD ADDRESS
  C472   C803 CC36      LOAD2	MOV	R3,@LADDR
  C476   04E4 001A      	CLR	@CRN(R4)		;BEGIN AT FIRST RECORD
  C47A   2E03           LOAD0	PUSH	R3		;SAVE DMA ADDR
  C47C   0202 001A      	LI	R2,SETDMA
  C480   2DA0 D100      	CALL	@BDOS
  C484   0202 0014      	LI	R2,RDSEQ 		;LOAD THE FILE
  C488   0203 CFC0      	LI	R3,FCB
  C48C   2DA0 D100      	CALL	@BDOS
  C490   2E43           	POP	R3	 	;POP DMA ADDR
  C492   0281 FFFF      	CI	R1,-1		;LOOK FOR EOF
  C496   1303           	JEQ	LOAD1	 		;
  C498   0223 0200      	AI	R3,BLKSIZ	 	;UP DMA
  C49C   10EE           	JMP	LOAD0	 		;
  C49E   C803 00A6      LOAD1	MOV	R3,@FREEMEM		;THIS IS THE NEW FREE MEMORY POINTER
  C4A2   9820 CC3A      	CB	@CMDLINE,@JUMP	;JUST LOAD IT?
  C4A6   C311           
  C4A8   1325           	JEQ	NEXTCMD	 	;YES
                        ;
                        ;**************************************************
                        ;
                        ;	JUMP TO LOADED PROGRAM
                        ;
                        ;***************************************************
                        ;
  C4AA   C820 CC36      GOPROG	MOV	@LADDR,@GO+2	;JUMP ADDR
  C4AE   C4CC           
  C4B0   0204 CC3A      	LI	R4,CMDLINE 		;?
  C4B4   0584           GOLOOP	INC	R4	
  C4B6   9814 C309      	CB	*R4,@SPACE	 	;1ST CHAR <=SPACE?
  C4BA   1BFC           	JH	GOLOOP	 	;NO
  C4BC   04C1           	CLR	R1	 	;TELL SMALL-VM IT'S A SHELL COMMAND
  C4BE   D801 CC39      	MOVB	R1,@CMDLINE-1	;DONE
  C4C2   0200 0080      	LI	R0,SHELLBV		;RETURN ADDRESS IF NEEDED
  C4C6   2E00           	PUSH	R0
  C4C8   02AD           	STWP	WP		;GIVE THE CALLING PROGRAMME ACCESS TO THE WORKSPACE ADDRESS ( NEEDED IN SMALLC )
  C4CA   0460 CAD8      GO	B	@SHELLERR 		;<<THIS ADDR IS ALTERED >>
                        ;	
                        ; R4 = RETURN CODE		
                        ;			
                        ;
                        ;	R1 IS THE RETURN CODE
                        ;	NOTE NEED TO RESTORE WP POINTERS ETC
                        ;
  C4CE   D801 CC38      RETURN	MOVB	R1,@CMDLINE-2
  C4D2   02E0 CFA0      	LWPI	WORKSP		;REINITIALSE WORKSPACE AND STACK POINTERS
  C4D6   020A C2FE      	LI	SP,STACKP
  C4DA   D060 CC38      	MOVB	@CMDLINE-2,R1
  C4DE   0881           	SRA	R1,8
  C4E0   0281 FFFF      	CI	R1,-1		;RETURN VIA SMALL-VM?
  C4E4   1607           	JNE	NEXTCMD 		;NO
  C4E6   04C1           	CLR	R1
  C4E8   D801 CC38      	MOVB	R1,@CMDLINE-2	;ENABLE PROGRAMME RE-ENTRY
  C4EC   C041           	MOV	R1,R1	 	;IS RETURN CODE ZERO?
  C4EE   1302           	JEQ	NEXTCMD		;YES
  C4F0   0460 CAF6      	B	@UNPROC	 	;NO,ABORT PROC CMD IF IN PROGRESS
                        ;
                        ;-----WHERE IS NEXT COMMAND TO BE FOUND
                        ;
  C4F4   D060 CC2C      NEXTCMD	MOVB	@PROCSW,R1
  C4F8   1302           	JEQ	PROMPT
  C4FA   0460 C946      	B	@PFETCH 
                        				 
                        ;
                        ;-----CONSOLE	INPUT
                        ;
  C4FE   D0E0 C315      PROMPT 	MOVB	@PROM,R3		;PROMPT CHARACTER INTO MSB
  C502   2DA0 CBEC      	CALL	@OUTCHAR
  C506   0204 CC3A      	LI	R4,CMDLINE 		;R4=DEST PTR
  C50A   0205 0040      	LI	R5,CLSZ		;R5=CHAR COUNTER
  C50E   C060 0000      CINLOOP	MOV	@CONSOLE,R1	
  C512   2DA0 CBE0      	CALL	@INCHAR	 	; RETURN INTO MSB OF R1
  C516   9801 C30B      	CB	R1,@BS	 	;BS?
  C51A   132A           	JEQ	RUBOUT	
  C51C   9801 C30E      	CB	R1,@DEL	 	;DEL?
  C520   1327           	JEQ	RUBOUT	
  C522   9801 C304      	CB	R1,@CTLC 		;^C?
  C526   1604           	JNE	STOWIT	 	;NO
  C528   D060 C30C      	MOVB	@CR,R1	 	;YES (CR=0DH)
  C52C   D801 CC3A      	MOVB	R1,@CMDLINE	 	;IGNORE CMD
                        ;
                        ;---Convert to upper case
                        ;
  C530   C001           STOWIT	MOV 	R1,R0
  C532   0980           	SRL	R0,8
  C534   0280 0061      	CI 	R0,61H		;'a'
  C538   1A08           	JL	STOWIT2	
  C53A   0280 007A      	CI	R0,7AH		;'z'
  C53E   1B05           	JH	STOWIT2
  C540   0220 FFE0      	AI	R0,-20H		;CONVERT TO LOWER CASE
  C544   06C0           	SWPB	R0
  C546   DD00           	MOVB	R0,*R4+
  C548   1001           	JMP	STOWIT2+2
  C54A   DD01           STOWIT2	MOVB	R1,*R4+		;STORE THE CHARACTER
  C54C   0605           	DEC	R5	
  C54E   1223           	JLE	CIOERR		;NO MORE SPACE
  C550   9801 C309      	CB	R1,@SPACE		;CTL CHAR?
  C554   1404           	JHE	ECHO	 	;NO,CONTINUE
  C556   04C0           	CLR	R0
  C558   D060 C30C      	MOVB	@CR,R1		;FORCE CR
  C55C   D500           	MOVB	R0,*R4 		;NULL TERMINATE
  C55E   C0C1           ECHO	MOV	R1,R3		;ECHO CHAR
  C560   2DA0 CBEC      	CALL	@OUTCHAR		;RETURNS CHAR IN R1 LSB
  C564   04E0 CC2E      	CLR	@SKIPSW	 	;DOSN'T ALTER FLAGS
  C568   9801 C30D      	CB	R1,@LF	 	;OUTCHAR GENERATES AUTO LF AFTER CR
  C56C   130D           	JEQ	GODOCMD	 
  C56E   10CF           	JMP	CINLOOP	
  C570   0285 0040      RUBOUT	CI	R5,CLSZ	
  C574   14CC           	JHE	CINLOOP	 	;CMDLINE IS EMPTY
  C576   0585           	INC	R5	
  C578   0604           	DEC	R4	
  C57A   2E04           	PUSH	R4	 	;PUSH R4
  C57C   0204 CF00      	LI	R4,RUBMSG	
  C580   2DA0 CC14      	CALL	@OUTSTR	 
  C584   2E44           	POP	R4	
  C586   10C3           	JMP	CINLOOP	
  C588   0200 CC3A      GODOCMD	LI	R0,CMDLINE
  C58C   6100           	S	R0,R4		;CALCULATE THE LENGTH OF THE COMMAND LINE USING THE POINTER IN R4
                        ;	SWPB	R4		;CAN'T BE GREATER THAN 255
  C58E   C804 00A2      	MOV	R4,@CMDL_SIZE	;STORE CMDLINE SIZE FOR SMALL C
  C592   0460 C368      	B	@DOCMD	
  C596   0460 CAC8      CIOERR	B	@LINERR	
                        
                        ;
                        ;*****************************************************
                        ;	LOOK FOR INTERNAL COMMANDS, I.E. DIR, SAVE, ETC
                        ;	FBC -> FILENAME
                        ;
                        ;*****************************************************
                        ;
  0004                  CMDCNT	EQU 	4		;NUMBER OF POSSIBLE INTERNAL COMMANDS
  C59A   4449 52        ICLIST	TEXT	"DIR"
  C59D   00             	BYTE	0		;END
  C59E   C60E           	WORD	DSKDIR		;ADDRESS
  C5A0   5341 5645      	TEXT	"SAVE"
  C5A4   00             	BYTE	0		; END
  C5A5   C6AC           	WORD	DSKSAVE		;ADDRESS
  C5A7   4552 41        	TEXT	"ERA"		;ERASE
  C5AA   00             	BYTE	0		; END
  C5AB   C7D0           	WORD	ERAFILE		;ADDRESS
  C5AD   5459 5045      	TEXT	"TYPE"		;TYPE A FILE TO THE CONSOLE
  C5B1   00             	BYTE	0		; END
  C5B2   C850           	WORD	TYPEFILE		;ADDRESS
  C5B4                  	EVEN
                        ;
                        ;	MISC STORAGE
                        ;
  C5B4   0002           BUFPNT	WORD	2	 	;BUFFER POINTER
  C5B6   0002           PAGCNT	WORD	2	 	;NO. OF PAGES TO SAVE
  C5B8   0002           SADDR	WORD	2		;START ADDRESS
  C5BA   2D             SWITCH	BYTE	'-'		;COMMAND LINE SWITCH
  C5BB   00             	EVEN
                        ;	
  C5BC   0201 C59A      ICMD	LI	R1,ICLIST
  C5C0   0203 CFC0      	LI	R3,FCB		;NAME OF COMMAND
  C5C4   0205 0004      	LI	R5,CMDCNT	;NUMBER OF INTERNAL COMMANDS
  C5C8   9C73           ICMD0	CB	*R3+,*R1+
  C5CA   13FE           	JEQ	ICMD0
  C5CC   0601           	DEC	R1		;BACK UP THE POINTER
  C5CE   0603           	DEC	R3
  C5D0   9813 C309      	CB	*R3,@SPACE	;IF SPACE WE HAVE REACHED THE END OF THE FILENAME
  C5D4   1B09           	JH	ICMD1	 	;GRAPHIC CHARACTER, MEANS NO MATCH
  C5D6   D011           	MOVB	*R1,R0		;TEST FOR END OF ENTRY
  C5D8   1607           	JNE	ICMD1		;NO MATCH
                        ;
                        ;	MATCH HERE BRANCH TO ADDRESS
                        ;	
  C5DA   0581           	INC	R1		;MOVE TO ADDRESS FIELD
  C5DC   D0B1           	MOVB	*R1+,R2		;MSB PART OF ADDRESS
  C5DE   06C2           	SWPB	R2
  C5E0   D0B1           	MOVB	*R1+,R2
  C5E2   06C2           	SWPB	R2		;ADDRESS IS NOW IN R2
  C5E4   2E40           	POP	R0		;WE WON'T BE RETURNING SO POP RETURN ADDRESS
  C5E6   0452           	B	*R2		;CALL THE COMMAND
                        ;
  C5E8   0605           ICMD1	DEC	R5		;MORE COMMANDS TO SEARCH ?
  C5EA   1306           	JEQ	ICMDE
                        ;
                        ; NEXT INTERNAL COMMAND
                        ;
  C5EC   D031           ICMD2	MOVB	*R1+,R0		; LOOK FOR TEMINATOR
  C5EE   16FE           	JNE	ICMD2
  C5F0   05C1           	INCT	R1		;POINT TO NEXT COMMAND
  C5F2   0203 CFC0      	LI	R3,FCB		;R1 POINTS TO NEXT COMMAND
  C5F6   10E8           	JMP	ICMD0
  C5F8   2DC0           ICMDE	RET			;RETURN 
                        ;
                        ;*********************************************************
                        ;
                        ; INTERNAL COMMAND DIR
                        ;
                        ;**********************************************************
                        ;
                        ;	MISC DEFINITIONS
                        ;
  C5FA   203A 20        BAR	TEXT	' : '
  C5FD   00             	BYTE	0
  C5FE   0D0A 00        CRLF	BYTE	0DH,0AH,0
  C601   4E4F 2046      MNOFILE	TEXT	'NO FILES'
  C605   494C 4553      
  C609   0D0A 00        	BYTE	0DH,0AH,0
  C60C                  	EVEN
  C60C   0000           CCOUNT	WORD	0			;COLUMN COUNTER
                        ;
  C60E                  	EVEN
  C60E   0200 0006      DSKDIR	LI	R0,6
  C612   C800 C60C      	MOV	R0,@CCOUNT
  C616   0201 3F00      	LI	R1,'?'*256		;WILD CHARACTER
  C61A   0200 000B      	LI	R0,NAMSIZ 		;FCB COUNTER
  C61E   0208 CFC0      	LI	R8,FCB	  		;
  C622   C088           	MOV	R8,R2	 		;SAVE FCB
  C624   DC81           DSKDIR0	MOVB	R1,*R2+	 		;STORE IN FCB
  C626   0600           	DEC	R0	 		;ANY MORE ALLOWED ?
  C628   16FD           	JNE	DSKDIR0	 		;YES
                        ;
                        ;	NOW SEARCH FOR FILES
                        ;
  C62A   0202 0011      	LI	R2,SEARCH1		;SEARCH RETURNS WITH R3->DIRECTORY ENTRY
  C62E   0203 CFC0      	LI	R3,FCB
  C632   2DA0 D100      	CALL	@BDOS	 		;TRY TO FIND A FILE
  C636   C041           	MOV	R1,R1	 		;SUCCESS ?
  C638   1132           	JLT	NOFILE			;NO FILES ON DISC
  C63A   2DA0 C654      	CALL	@PNAME			;PRINT THE NAMES	
                        ;
                        ;	CONTINUE
                        ;
  C63E   0202 0012      DSKDIR1	LI	R2,SEARCH2
  C642   0203 CFC0      	LI	R3,FCB
  C646   2DA0 D100      	CALL	@BDOS
                        
  C64A   C041           	MOV	R1,R1
  C64C   1123           	JLT	DIREXIT
  C64E   2DA0 C654      	CALL	@PNAME
  C652   10F5           	JMP	DSKDIR1
                        ;
                        ;********************************
                        ;
                        ;	PRINT THE DIRECTORY ENTRY
                        ;
                        ;	R3 -> CURRENT DIRECTORY ENTRY	
                        ;
                        ;*********************************
                        ;
  C654   0620 C60C      PNAME	DEC	@CCOUNT
  C658   1606           	JNE	PNAME1
  C65A   2FA0 C5FE      	MESG	@CRLF
  C65E   0201 0006      	LI	R1,6
  C662   C801 C60C      	MOV	R1,@CCOUNT
                        ;
  C666   C043           PNAME1	MOV	R3,R1			;DIRECTORY POINTER
  C668   0200 000B      	LI	R0,NAMSIZ
  C66C   2E00           PNAME2	PUSH	R0
  C66E   D0F1           	MOVB	*R1+,R3			;PRINT NAME
  C670   06C3           	SWPB	R3			;DO PRINTS LSB
  C672   2E01           	PUSH	R1
  C674   0202 0002      	LI	R2,COUT
  C678   2DA0 D100      	CALL	@BDOS	
  C67C   2E41           	POP	R1
  C67E   2E40           	POP	R0
  C680   0600           	DEC	R0
  C682   16F4           	JNE	PNAME2
  C684   C020 C60C      	MOV	@CCOUNT,R0
  C688   0280 0001      	CI	R0,1			;IF LAST ENTRY ON LINE DONT BAR
  C68C   1302           	JEQ	PNAME3
  C68E   2FA0 C5FA      	MESG	@BAR
  C692   2DC0           PNAME3	RET
                        ;
                        ;
  C694   2FA0 C5FE      DIREXIT	MESG	@CRLF
  C698   04C1           	CLR 	R1			;SHOW RETURN NOT FROM VM
  C69A   0460 C4CE      	B	@RETURN			;RETURN TO SHELL
                        ;
  C69E   2FA0 C601      NOFILE	MESG	@MNOFILE
  C6A2   04C1           	CLR	R1			;SHOW RETURN NOT FROM VM
  C6A4   0460 CAC2      	B	@CMDERR	
                        	
                        ;
                        ;*******************************************************
                        ;
                        ; SAVE A PROGRAMME IN MEMORY TO A FILE 
                        ; SYNTAX
                        ;        SAVE <NUMBER OF 512 SECTORS> <FILENAME>  <-MEMORY ADDRESS>
                        ;
                        ;
                        ;******************************************************
                        ;
                        ;BDOSRV EQUATES	
                        ;
  00A0                  CMDPTR	EQU	0A0H		;SHELL COMMAND LINE POINTER
  C6A8   0460 C86A      PARSERR	B	@PARSMSG
                        
  C6AC   04E0 C5B6      DSKSAVE	CLR	@PAGCNT
  C6B0   04E0 C5B4      	CLR	@BUFPNT
  C6B4   0208 0100      	LI	R8,TPA		;DEFAULT START ADDRESS
  C6B8   C808 C5B8      	MOV	R8,@SADDR
  C6BC   0208 CC3A      	LI	R8,CMDLINE
  C6C0   9838 C309      START00	CB	*R8+,@SPACE	 	;JUMP OVER 'SAVE' LOOK FOR NON VALID CHARACTERS
  C6C4   1BFD           	JH	START00
  C6C6   0608           	DEC	R8	 	;BACK UP TO 1ST CHAR
  C6C8   9818 C30C      START02	CB	*R8,@CR		;EOF COMMAND?
  C6CC   13ED           	JEQ	PARSERR
  C6CE   9838 C309      	CB	*R8+,@SPACE		;NOW JUMP OVER SPACES
  C6D2   12FA           	JLE	START02
  C6D4   0608           	DEC	R8
  C6D6   C808 C5B4      	MOV	R8,@BUFPNT		;LOOK FOR NUMBER OF SECTORS
  C6DA   2DA0 C888      	CALL	@ATOD	 	;CONVERT ASCII TO DEC
  C6DE   C041           	MOV	R1,R1	 	;ZERO SHOWS ERROR
  C6E0   13E3           	JEQ	PARSERR
  C6E2   C801 C5B6      	MOV	R1,@PAGCNT		;SAVE AS PAGE COUNT
  C6E6   C220 C5B4      	MOV	@BUFPNT,R8
                        ;
                        ;	LOOK FOR FILE NAME
                        ;
  C6EA   9818 C30C      STRT01	CB	*R8,@CR		;EOL COMMAND?
  C6EE   13DC           	JEQ	PARSERR
  C6F0   9838 C309      	CB	*R8+,@SPACE 	;LOOK FOR NAME
  C6F4   12FA           	JLE	STRT01
  C6F6   0608           	DEC	R8	 	;BACK UP
  C6F8   C0C8           	MOV	R8,R3		;R3->NAME
  C6FA   0200 000B      	LI	R0,NAMSIZ 		;FCB COUNTER
  C6FE   0208 CFC0      	LI	R8,FCB	  		;
  C702   D620 C309      	MOVB	@SPACE,*R8		;FILL WITH SPACE
  C706   C088           	MOV	R8,R2	 		;SAVE FCB
  C708   9813 C309      NAM0	CB	*R3,@SPACE	 	;END OF NAME ?
  C70C   1207           	JLE	NAM1	 	;YES
  C70E   13CC           	JEQ	PARSERR
  C710   0583           	INC	R3		;UP POINTER
  C712   0600           	DEC	R0		;DONT STORE TOO MANY
  C714   12F9           	JLE	NAM0
  C716   0603           	DEC	R3
  C718   DCB3           	MOVB	*R3+,*R2+		;STORE IN FCB
  C71A   10F6           	JMP	NAM0		;KEEP GOING
  C71C   C000           NAM1	MOV	R0,R0
  C71E   1204           	JLE	NAM2		;FCB ALREADY FULL
  C720   DCA0 C309      NAM4	MOVB	@SPACE,*R2+	 	;PAD WITH SPACES
  C724   0600           	DEC	R0
  C726   16FC           	JNE	NAM4
                        ;
                        ;	LOOK FOR START ADDRESS	
                        ;	IF EOL ENCOUNTERED USE DEFAULT TPA
                        ;
  C728   9833 C309      NAM2	CB	*R3+,@SPACE		; END
  C72C   13FD           	JEQ	NAM2		;KEEP LOOKING FOR NUMBER
  C72E   0603           	DEC	R3
  C730   9813 C30C      	CB	*R3,@CR
  C734   130B           	JEQ	NAMSRCH		;USE DEFAULT TPA
  C736   9833 C5BA      	CB	*R3+,@SWITCH	;SEE IF ANY SWITCHS ARE THERE
  C73A   16B6           	JNE	PARSERR
  C73C   C803 C5B4      	MOV	R3,@BUFPNT		;FOR ATOD
  C740   2DA0 C8B4      	CALL	@CATOH		;SEE IF ITS LEGAL
  C744   C041           	MOV	R1,R1		;ZERO IS AN ERROR
  C746   13B0           	JEQ	PARSERR
  C748   C801 C5B8      	MOV	R1,@SADDR		;SAVE AS START ADDRESS
                        ;
                        ;	USE BDOS TO SEARCH FOR FILE
                        ;
  C74C   0202 0011      NAMSRCH	LI	R2,SEARCH1		;SEARCH RETURNS WITH R3->DIRECTORY ENTRY
  C750   0203 CFC0      	LI	R3,FCB
  C754   2DA0 D100      	CALL	@BDOS	 	;TRY TO FIND A FILE
  C758   C041           	MOV	R1,R1	 	;SUCCESS ?
  C75A   1106           	JLT	NAM5		;NO FILES ON DISC
  C75C   0202 0013      NAM3	LI	R2,ERAFIL 		;PURGE IF ALREADY EXITS
  C760   0203 CFC0      	LI	R3,FCB
  C764   2DA0 D100      	CALL	@BDOS
  C768   0202 0016      NAM5	LI	R2,MAKFIL
  C76C   0203 CFC0      	LI	R3,FCB
  C770   2DA0 D100      	CALL	@BDOS	 	;TRY TO MAKE THE FILE
                        ;	B	@TIMON	
  C774   C041           	MOV	R1,R1	 	;SUCCESS ?
  C776   1171           	JLT	MKERR	 	;MAKE ERROR
  C778   04C0           	CLR	R0
  C77A   0204 CFC0      	LI	R4,FCB
  C77E   D900 000B      	MOVB	R0,@FTY(R4)		;ZERO SAYS DONT CARE
  C782   C0E0 C5B8      	MOV	@SADDR,R3		;START ADDRESS
  C786   C903 0010      	MOV	R3,@FLA(R4)		;EXECUTE ADDRESS
  C78A   C900 001A      	MOV	R0,@CRN(R4)		;BEGIN AT FIRST RECORD
  C78E   2E03           WRDATA	PUSH	R3
  C790   0202 001A      	LI	R2,SETDMA
  C794   2DA0 D100      	CALL	@BDOS
  C798   0202 0015      	LI	R2,WRSEQ
  C79C   0203 CFC0      	LI	R3,FCB
  C7A0   2DA0 D100      	CALL	@BDOS
  C7A4   2E43           	POP	R3	 	;POP ADDR
  C7A6   C041           	MOV	R1,R1	 	;WRITE ERROR ?
  C7A8   1155           	JLT	WRITERR	 	;YES
                        ;
                        ;	SET FILE LIMIT
                        ;
  C7AA   0283 C000      	CI	R3,0C000H
  C7AE   1461           	JHE	LARGERR
  C7B0   0223 0200      	AI	R3,BYTSEC 		;NEXT PAGE
  C7B4   0620 C5B6      	DEC	@PAGCNT	 	;FINISHED ?
  C7B8   16EA           	JNE	WRDATA		;YES
  C7BA   0202 0010      WRDATAC	LI	R2,FCLOSE	 	;NOW CLOSE THE FILE
  C7BE   0203 CFC0      	LI	R3,FCB
  C7C2   2DA0 D100      	CALL	@BDOS
  C7C6   04C1           EXIT	CLR	R1		;RETURN CODE FOR SHELL
  C7C8   0460 C4CE      	B	@RETURN		;NEED TO CALL SHELL INIT BECAUSE WE HAVE ALTERED WP
                        	
                        ;
                        ;*******************************************************
                        ;
                        ; ERASE A FILE FROM DISC 
                        ;
                        ;
                        ;******************************************************
  C7CC   0460 C86A      ERAPERR	B	@PARSMSG
                        
  C7D0   04E0 C5B6      ERAFILE	CLR	@PAGCNT
  C7D4   04E0 C5B4      	CLR	@BUFPNT
  C7D8   0208 0100      	LI	R8,TPA			;DEFAULT START ADDRESS
  C7DC   C808 C5B8      	MOV	R8,@SADDR
  C7E0   0208 CC3A      	LI	R8,CMDLINE
  C7E4   9838 C309      ERA0	CB	*R8+,@SPACE	 	;JUMP OVER 'ERA' LOOK FOR NON VALID CHARACTERS
  C7E8   1BFD           	JH	ERA0
  C7EA   0608           	DEC	R8	 		;BACK UP TO 1ST CHAR
                        ;
                        ;LOOK FOR FILE NAME
                        ;
  C7EC   9818 C30C      ERA01	CB	*R8,@CR			;EOL COMMAND?
  C7F0   13ED           	JEQ	ERAPERR
  C7F2   9838 C309      	CB	*R8+,@SPACE 		;LOOK FOR NAME
  C7F6   12FA           	JLE	ERA01
  C7F8   0608           	DEC	R8	 		;BACK UP
  C7FA   C0C8           	MOV	R8,R3			;R3->NAME  
  C7FC   0200 000B      	LI	R0,NAMSIZ 		;FCB COUNTER
  C800   0208 CFC0      	LI	R8,FCB	  	;
  C804   D620 C309      	MOVB	@SPACE,*R8		;FILL WITH SPACE
  C808   C088           	MOV	R8,R2	 	;SAVE FCB
  C80A   9813 C309      ERA1	CB	*R3,@SPACE	 	;END OF NAME ?
  C80E   1207           	JLE	ERA2	 	;YES
  C810   13DD           	JEQ	ERAPERR
  C812   0583           	INC	R3		;UP POINTER
  C814   0600           	DEC	R0		;DONT STORE TOO MANY
  C816   12F9           	JLE	ERA1
  C818   0603           	DEC	R3
  C81A   DCB3           	MOVB	*R3+,*R2+		;STORE IN FCB
  C81C   10F6           	JMP	ERA1		;KEEP GOING
  C81E   C000           ERA2	MOV	R0,R0
  C820   1204           	JLE	ERA4		;FCB ALREADY FULL
  C822   DCA0 C309      ERA3	MOVB	@SPACE,*R2+	 	;PAD WITH SPACES
  C826   0600           	DEC	R0
  C828   16FC           	JNE	ERA3
                        ;
                        ;	USE BDOS TO SEARCH FOR FILE
                        ;
  C82A   0202 0011      ERA4	LI	R2,SEARCH1		;SEARCH RETURNS WITH R3->DIRECTORY ENTRY
  C82E   0203 CFC0      	LI	R3,FCB
  C832   2DA0 D100      	CALL	@BDOS	 	;TRY TO FIND A FILE
  C836   C041           	MOV	R1,R1	 	;SUCCESS ?
  C838   1108           	JLT	ERAE		;NO FILES ON DISC
  C83A   0202 0013      	LI	R2,ERAFIL 		;PURGE IF ALREADY EXITS
  C83E   0203 CFC0      	LI	R3,FCB
  C842   2DA0 D100      	CALL	@BDOS
  C846   C041           	MOV	R1,R1	 	;WRITE ERROR ?
  C848   1117           	JLT	MKERR2	 	;YES
  C84A   04C1           ERAE	CLR	R1		;RETURN CODE FOR SHELL
  C84C   0460 C4CE      	B	@RETURN		;NEED TO CALL SHELL INIT BECAUSE WE HAVE ALTERED WP
                        
                        ;
                        ;*****************************************************************
                        ;
                        ;	OUTPUT A TEXT FILE TO THE CONSOLE
                        ;	THIS LOADS THE FILE USING .FILENAME AND THEN SENDS IT TO THE CONSOLE
                        ;
                        ;*****************************************************************
                        ;
  C850   0460 C4CE      TYPEFILE:	B	@RETURN
                        
                        ;
                        ;  ERROR MESSAGES
                        ;
  C854   2FA0 C91C      WRITERR	MESG	@ERRMSG4
  C858   100F           	JMP	MKERR2
  C85A   0460 F000      MKERR	B	@TIMON
  C85E   2FA0 C90C      	MESG	@ERRMSG3
  C862   100A           	JMP	MKERR2
  C864   2FA0 C8EC      CLOSERR	MESG	@ERRMSG1		;IF WE DONT CLOSE UNUSED BLOCKS MAY
  C868   1007           	JMP	MKERR2		;BE STILL ALLOCATED
  C86A   2FA0 C8FC      PARSMSG	MESG	@ERRMSG2
  C86E   0460 C4F4      	B	@NEXTCMD
  C872   2FA0 C92C      LARGERR	MESG	@ERRMSG5
  C876   1000           	JMP	MKERR2
                        	
  C878   0202 0010      MKERR2	LI	R2,FCLOSE		;TRY TO CLOSE THE FILE
  C87C   0203 CFC0      	LI	R3,FCB
  C880   2DA0 D100      	CALL	@BDOS
  C884   0460 C4CE      	B	@RETURN;
                        ;
                        ;
                        ; CONVERT ASCII TO DECIMAL
                        ;
  C888   04C3           ATOD	CLR	R3	 		;PRESET VALUE
  C88A   0208 000A      	LI	R8,10	 		;BASE 
  C88E   C020 C5B4      ATOD00	MOV	@BUFPNT,R0	 		;
  C892   D090           	MOVB	*R0,R2	 		;GET CHAR
  C894   0982           	SRL	R2,8	 		;
  C896   0222 FFD0      	AI	R2,-'0' 		;REMOVE ASCII BIAS
  C89A   1103           	JLT	ATOD03	 		;NOT VALID
  C89C   0282 000A      	CI	R2,10	 		;
  C8A0   1102           	JLT	ATOD04	 		;OKAY
  C8A2   C043           ATOD03	MOV	R3,R1	 		;ANSWER
  C8A4   2DC0           	RET
  C8A6   C002           ATOD04	MOV	R2,R0
  C8A8   C083           	MOV	R3,R2
  C8AA   3888           	MPY	R8,R2
  C8AC   A0C0           	A	R0,R3
  C8AE   05A0 C5B4      	INC	@BUFPNT 
  C8B2   10ED           	JMP	ATOD00
                        ;
                        ;	CONVERT ALPHA TO HEX
                        ;
  C8B4   04C2           CATOH	CLR	R2
  C8B6   C020 C5B4      LOOP	MOV	@BUFPNT,R0
  C8BA   04C1           	CLR	R1
  C8BC   D050           	MOVB	*R0,R1
  C8BE   0281 3000      	CI	R1,'0'*256
  C8C2   1A12           	JL	NOTHEX
  C8C4   0281 3900      	CI	R1,'9'*256
  C8C8   1208           	JLE	GOTONE
  C8CA   0281 4100      	CI	R1,'A'*256
  C8CE   1A0C           	JL	NOTHEX
  C8D0   0281 4600      	CI	R1,'F'*256
  C8D4   1B09           	JH	NOTHEX
  C8D6   0221 0900      	AI	R1,0900H
  C8DA   0A41           GOTONE	SLA	R1,4
  C8DC   09C1           	SRL	R1,12
                        ;
                        ;	DIGIT TO ACCUMULATOR
                        ;
  C8DE   0A42           	SLA	R2,4
  C8E0   A081           	A	R1,R2
  C8E2   05A0 C5B4      	INC	@BUFPNT
  C8E6   10E7           	JMP	LOOP
                        ;
  C8E8   C042           NOTHEX	MOV	R2,R1
  C8EA   2DC0           	RET
                        ;
                        ;*****************************************************
                        ; MESSAGES
                        ;
                        ;****************************************************
  C8EC   2D2D 436C      ERRMSG1	TEXT	'--Close error'
  C8F0   6F73 6520      
  C8F4   6572 726F      
  C8F8   72             
  C8F9   0D0A 00        	BYTE	0DH,0AH,0
  C8FC                  	EVEN
  C8FC   2D2D 5061      ERRMSG2 TEXT	'--Parse error'
  C900   7273 6520      
  C904   6572 726F      
  C908   72             
  C909   0D0A 00        	BYTE	0DH,0AH,0
  C90C                  	EVEN
  C90C   2D2D 4D61      ERRMSG3 TEXT	'--Make error'
  C910   6B65 2065      
  C914   7272 6F72      
  C918   0D0A 00        	BYTE	0DH,0AH,0
  C91B   00             	EVEN
  C91C   2D2D 5772      ERRMSG4 TEXT	'--Write error'
  C920   6974 6520      
  C924   6572 726F      
  C928   72             
  C929   0D0A 00        	BYTE	0DH,0AH,0
  C92C                  	EVEN
  C92C   2D2D 4669      ERRMSG5 TEXT	'--File too large error'
  C930   6C65 2074      
  C934   6F6F 206C      
  C938   6172 6765      
  C93C   2065 7272      
  C940   6F72           
  C942   0D0A 00        	BYTE	0DH,0AH,0
  C945   00             	EVEN
                        ;	
                        ;*******************************************************
                        ;
                        ;	PROCEDURE INPUT
                        ;
                        ;******************************************************
                        ;
  C946   0204 0040      PFETCH	LI	R4,CLSZ
  C94A   C804 CC24      	MOV	R4,@CMDBYTES			;BYTES LEFT IN CMDLINE
  C94E   0204 CC3A      	LI	R4,CMDLINE	 		;NEXT CMDLINE DEST ADDR
  C952   C804 CC22      	MOV	R4,@CMDADDR	
  C956   04E0 CC34      	CLR	@SUBFLAG	
                        ;
                        ;	IS A NEW SECTOR NEEDED?
                        ;
  C95A   C120 CEA6      PLOOP	MOV	@MCNT,R4	 		;CHARS LEFT IN BUFFER
  C95E   1626           	JNE	BUFMOVE	 		;YES, MOVE NEXT CHAR
                        ;
                        ;ANY	MORE	SECTORS	IN THE FILE
                        ;
  C960   C120 CC92      	MOV	@MFSZ,R4	
  C964   1321           	JEQ	PROCERR1			;NO,END OF FILE
                        ;
                        ;READ	NEXT	SECTOR
                        ;
  C966   0203 0000      	LI	R3,DEFDRV
  C96A   0202 000E      	LI	R2,SELDSK
  C96E   2DA0 D100      	CALL	@BDOS	 
  C972   0203 CCA4      	LI	R3,MBUF	 			;USE THIS BUFFER
  C976   0202 001A      	LI	R2,SETDMA
  C97A   2DA0 D100      	CALL	@BDOS	
  C97E   0203 CFC0      	LI	R3,FCB	
  C982   0202 0014      	LI	R2,RDSEQ	 		;READ 1 SECTOR<--
  C986   2DA0 D100      	CALL	@BDOS		 		;
  C98A   C041           	MOV	R1,R1	 			;TROUBLE ?
  C98C   110B           	JLT	PROCERR0	 		;YES
  C98E   0201 0200      	LI	R1,BLKSIZ	 		;INIT MCNT
  C992   C801 CEA6      	MOV	R1,@MCNT	 		;
  C996   0204 CCA4      	LI	R4,MBUF	 			;INIT NEXT BUFFER ADDR
  C99A   C804 CEA8      	MOV	R4,@MADDR	
  C99E   0620 CC92      	DEC	@MFSZ	 			;DECR PROC FILE SIZE(SECTORS LEFT)
  C9A2   1004           	JMP	BUFMOVE	
  C9A4   0460 CAD8      PROCERR0	B	@SHELLERR	
  C9A8   0460 CAF6      PROCERR1	B	@UNPROC	
                        ;
                        ;-----MOVE NEXT	BYTE TO CMDLINE FROM PROC BUFFER
                        ;
  C9AC   C120 CEA8      BUFMOVE	MOV	@MADDR,R4	
  C9B0   D074           	MOVB	*R4+,R1	
  C9B2   C804 CEA8      	MOV	R4,@MADDR	
  C9B6   0620 CEA6      	DEC	@MCNT	 		;DECR MCNT
  C9BA   2E01           	PUSH	R1	 		;PUSH R1
  C9BC   C020 CC34      	MOV	@SUBFLAG,R0			;PREV CHAR A SUBSTITUTION MARKER? 
  C9C0   1621           	JNE	PARMSUB	 		;YES
  C9C2   2E41           	POP	R1			;NO 
  C9C4   9801 C316      	CB	R1,@SUBMARK	 		;THIS CHAR A SUB MARKER?
  C9C8   1603           	JNE	BUFMOV2	 		;NO
  C9CA   0720 CC34      	SETO	@SUBFLAG	 		;YES,SET FLAG
  C9CE   10C5           	JMP	PLOOP	 		;AND CONTINE
  C9D0   9801 C30F      BUFMOV2	CB	R1,@EOF	 		;PDS EOF FLAG?
  C9D4   1313           	JEQ	BUFMOV4			;YES,EOF
  C9D6   9801 0000      	CB	R1,@PAD	 		;SMALL-VM PAD CHAR?
  C9DA   1310           	JEQ	BUFMOV4			;YES,EOF
  C9DC   9801 C30D      BUFMOV3	CB	R1,@LF	 		;LF?
  C9E0   13BC           	JEQ	PLOOP	 		;YES,IGNORE IT
  C9E2   C120 CC22      BUFPUT	MOV	@CMDADDR,R4	 	;NEXT CMDLINE ADDR
  C9E6   D501           	MOVB	R1,*R4	
  C9E8   9801 C30C      	CB	R1,@CR	 		;CR?
  C9EC   1331           	JEQ	PEOL	 		;YES,CMD IS FETCHED
  C9EE   0584           	INC	R4	
  C9F0   C804 CC22      	MOV	R4,@CMDADDR	
  C9F4   0620 CC24      	DEC	@CMDBYTES	 	;CMDLINE BYTES LEFT
  C9F8   1303           	JEQ	MOVERR	  		;NO SPACE LEFT,ABORT PROC
  C9FA   10AF           	JMP	PLOOP	 		;YES,GO FOR NEXT BYTE
  C9FC   0460 CAF6      BUFMOV4	B	@UNPROC	
  CA00   0460 CAC8      MOVERR	B	@LINERR	
                        ;
                        ;----PARAMETER	SUB(R1	ON	TOP OF STACK)
                        ;
  CA04   04E0 CC34      PARMSUB	CLR	@SUBFLAG	 		;CLEAR SUB FLAG
  CA08   2E41           	POP	R1	 		;FETCH CAHR FOLLOWING SUBST MARKER
  CA0A   2E01           	PUSH	R1	 		;AND SAVE IT AGAIN
  CA0C   0981           	SRL	R1,8	
  CA0E   0221 FFE0      	AI	R1,0FFE0H		;REDUCE ASCII BYTE TO INTEGER(-30)
  CA12   1119           	JLT	NOSUB	 		;LT ZERO
  CA14   0281 000A      	CI	R1,10	
  CA18   1516           	JGT	NOSUB	 		;GT 9
  CA1A   C081           	MOV	R1,R2	 		;PPTR OFFSET
  CA1C   2E41           	POP	R1	 		;WASTE TOP OF STACK
  CA1E   0204 CF48      	LI	R4,PPTRS	 		;1ST PPTR ADDR
  CA22   C0D4           SUBLOOP	MOV	*R4,R3	 		;R3=NEXT PPTR
  CA24   1312           	JEQ	NULLPARM	
  CA26   0602           	DEC	R2	
  CA28   15FC           	JGT	SUBLOOP	
                        ;
                        ;-PPTR	FOUND
                        ;
  CA2A   D053           SUBLOOP2	MOVB	*R3,R1	 	;FETCH NEXT PARM CHAR
  CA2C   9060 C309      	CB	@SPACE,R1	 	;END OF PARM(LE SPACE)?
  CA30   1194           	JLT	PLOOP	 		;YES,CONTINUE
  CA32   0583           	INC	R3	 		;BUMP PARM BYTE ADDR
  CA34   C120 CC22      	MOV	@CMDADDR,R4	 		;STORE BYTE IN CMDLINE
  CA38   DD01           	MOVB	R1,*R4+	 		;ALSO BUMP BYTE ADDR
  CA3A   C804 CC22      	MOV	R4,@CMDADDR	
  CA3E   0620 CC24      	DEC	@CMDBYTES	 		;DECR BYTES LEFT IN CMDLINE
  CA42   1342           	JEQ	LINERR	 		;NO SPACE LEFT,ABORT PROC!
  CA44   10F2           	JMP	SUBLOOP2	
                        ;
                        ;NON-NUMERIC	CHAR	FOLLOWS	SUBSTITUTION MARKER
                        ;--TREAT	NORMAL
                        ;
  CA46   2E41           NOSUB	POP	R1	 		;RESTORE CHAR
  CA48   10C3           	JMP	BUFMOV2	 		;AND CONTINUE
                        ;
                        ;-NO	PARAMETER	GIVEN	FOR SUBSTITUTION
                        ;--SUB	NULL	STRING
                        ;
  CA4A   0201 0A00      NULLPARM	LI	R1,0A00H 			;FORCE BYTE TO BE SKIPPED
  CA4E   10C6           	JMP	BUFMOV3	
                        ;
                        ;----END OF PROCEDURE LINE
                        ;
  CA50   D060 CC3A      PEOL	MOVB	@CMDLINE,R1	
  CA54   9060 C310      	CB	@COMT,R1	 		;COMMENT?
  CA58   1330           	JEQ	BPFETCH	 		;YES,IGNORE IT
  CA5A   9060 C314      	CB	@NOTE,R1	 		;OPERATOR NOTE?
  CA5E   1303           	JEQ	VIEW	 		;YES, DISPLAY THE LINE
  CA60   C060 CC30      	MOV	@VSW,R1	 		;VIEW SWITCH SET?
  CA64   1304           	JEQ	CKNSW	 		;NO
  CA66   0204 CC3A      VIEW	LI	R4,CMDLINE	 		;YES
  CA6A   2DA0 CC14      	CALL	@OUTSTR	
                        ;
  CA6E   C060 CC32      CKNSW	MOV	@NSW,R1	 		;NO-EXECUTE SWITCH SET?
  CA72   1623           	JNE	BPFETCH	 		;YES,GO FOR NEXT COMMAND LINE
  CA74   D060 CC3A      	MOVB	@CMDLINE,R1	 		;OPERATOR NOTE?
  CA78   9060 C314      	CB	@NOTE,R1	
  CA7C   1620           	JNE	BTDOCMD	 		;NO;PROCESS THE COMMAND LINE
  CA7E   0204 CC3A      	LI	R4,CMDLINE	
  CA82   0584           	INC	R4	
  CA84   9814 C314      	CB	*R4,@NOTE			;OPERATOR RESPONCE?
  CA88   1618           	JNE	BPFETCH			;NO
  CA8A   0204 CF3B      WAIT	LI	R4,WAITMSG	
  CA8E   2DA0 CC14      	CALL	@OUTSTR
  CA92   04C1           	CLR	R1			;WAIT FOR A RESPONCE
  CA94   2DA0 0001      	CALL	@CIN			;<---
  CA98   2E01           	PUSH	R1			;ECHO CR,LF
  CA9A   D0E0 C30C      	MOVB	@CR,R3	
  CA9E   2DA0 CBEC      	CALL	@OUTCHAR	
  CAA2   2E41           	POP	R1	
  CAA4   9801 C30C      	CB	R1,@CR			;CR?
  CAA8   1308           	JEQ	BPFETCH			;YES,CONTINE
  CAAA   9801 C304      	CB	R1,@CTLC			;^C?
  CAAE   1323           	JEQ	UNPROC			;YES,ABORT PROC
  CAB0   9801 C306      	CB	R1,@CTLS			;^S?
  CAB4   16EA           	JNE	WAIT			;NO,KEEP WAITING
  CAB6   0720 CC2E      	SETO	@SKIPSW			;SET SKIP SWITCH 
  CABA   0460 C946      BPFETCH	B	@PFETCH			;FETCH NEXT PROC COMMAND 
  CABE   0460 C368      BTDOCMD	B	@DOCMD	
                        ;
                        ;-----ERROR	ROUTINES
                        ;
  CAC2   0204 CC3A      CMDERR	LI	R4,CMDLINE	
  CAC6   1014           	JMP	ERROUT	
  CAC8   C0A0 C30C      LINERR	MOV	@CR,R2	
                        	;CALL	@OUTCHAR	
  CACC   0204 CF1A      	LI	R4,LINEMSG	
  CAD0   100F           	JMP	ERROUT	
  CAD2   0204 CF04      PARMERR	LI	R4,PARMSG	
  CAD6   100C           	JMP	ERROUT	
  CAD8   0204 CEF2      SHELLERR	LI	R4,SHELLMSG
  CADC   1009           	JMP	ERROUT	
  CADE   0204 CF2A      HARDERR	LI	R4,HARDMSG	
  CAE2   1006           	JMP	ERROUT	
  CAE4   0204 CED7      NULLERR	LI	R4,NULLMSG	
  CAE8   1003           	JMP	ERROUT	
  CAEA   0204 CEDA      NESTERR	LI	R4,NESTMSG	
  CAEE   1000           	JMP	ERROUT	 
                        ERROUT	;PUSH	R4	
                        	;LI	R4,QUESTMSG
                        	;CALL	@OUTSTR	 
                        	;POP	R4	
                        	;CALL	@OUTSTR	 
  CAF0   2FA0 CED8      	MESG	@QUESTMSG
  CAF4   2F94           	MESG	*R4
                        ;
                        ;-----TERMINATE	PROCEDURE	PROCESSING
                        ;
  CAF6   04E0 CC2C      UNPROC	CLR	@PROCSW	 		;CLEAR SWITCH 
  CAFA   0204 C380      	LI	R4,CHKSYS	 	; 
  CAFE   05C4           	INCT	R4	 		;POINT TO COMPARE WORD
  CB00   D520 C317      	MOVB	@SYSFILE,*R4		;REJECT FUTURE SYS FILE REFS
  CB04   0460 C4CE      	B	@RETURN	 		;RESETS SP & GOES TO PROMPT
                        ;
                        ;----INITIATE	PROCEDURE	PROCESSING
                        ;
  CB08   C060 CC2C      DOPROC	MOV	@PROCSW,R1	 		;ALREADY IN A PROC?
  CB0C   16EE           	JNE	NESTERR	 		;YES,BUT CAN'T NEST THEM
  CB0E   0701           	SETO	R1	 		;NO,SET PROC SWITCH
  CB10   C801 CC2C      	MOV	R1,@PROCSW	
  CB14   0203 CFC0      	LI	R3,FCB			;SET PROC FDE FIELDS
  CB18   0204 CC82      	LI	R4,MNAM			;DEST 
  CB1C   0202 0010      	LI	R2,16			; 
  CB20   2DA0 CBD8      	CALL	@BMOVE	
  CB24   04C4           	CLR	R4	 		;FORCE FIRST DISK READ
  CB26   C804 CEA6      	MOV	R4,@MCNT	
                        ;
                        ;---PARSE	PROCEDURE	PARAMETERS
                        ;
  CB2A   04E0 CC30      	CLR	@VSW	 		;CLEAR VIEW SWITCH
  CB2E   04E0 CC32      	CLR	@NSW	 		;CLEAR NO-EXECUTE SWITHC
  CB32   0204 CF48      	LI	R4,PPTRS	 		;INIT PPADDR
  CB36   C804 CF9E      	MOV	R4,@PPADDR	
  CB3A   0203 CF5E      	LI	R3,PBUF	 		;INIT DEST ADDR (R3)
  CB3E   0204 CC3A      	LI	R4,CMDLINE	 		;INIT SOURCE ADDR (R4)
  CB42   0202 000A      	LI	R2,10	 		;MAX PARMS ALLOWED 
  CB46   04C0           	CLR	R0	 		;R0 = WORD SWITCH(ZERO BETWEEN WORDS)
  CB48   04C1           PARSLOOP	CLR	R1	
  CB4A   D074           	MOVB	*R4+,R1			;LOAD NEXT BYTE
  CB4C   0281 2D00      	CI	R1,2D00H 		;CMD LINE SWITCH(-)?
  CB50   161A           	JNE	PARS1	 		;NO
  CB52   C000           	MOV	R0,R0	 		;BEGINNING OF WORD?
  CB54   1616           	JNE	PARS0B	 		;NO,CONTINUE
  CB56   0584           	INC	R4	
  CB58   D054           	MOVB	*R4,R1	 		;TEST 3RD BYTE
  CB5A   0604           	DEC	R4	
  CB5C   0281 2000      	CI	R1,2000H 		;SPACE OR CTL CHAR?
  CB60   1B10           	JH	PARS0B	 		;NO,CONTINUE
  CB62   D054           	MOVB	*R4,R1	 		;TEST 2ND BYTE
  CB64   0281 5600      	CI	R1,5600H 		;-V?
  CB68   1604           	JNE	PARS0A	 		;NO
  CB6A   C801 CC30      	MOV	R1,@VSW	 		;YES,SET VIEW SWITCH
  CB6E   0584           PARS0	INC	R4	 		;AND DROP SWITCH FROM THE COMMAND
  CB70   10EB           	JMP	PARSLOOP	
  CB72   0281 4E00      PARS0A	CI	R1,4E00H 		;-N?
  CB76   1605           	JNE	PARS0B	 		;NO-CONTINUE
  CB78   0201 2D00      	LI	R1,2D00H 		;RESTORE CHAR
  CB7C   C801 CC32      	MOV	R1,@NSW	 		;YES-SET NO EXECUTE SWITCH
  CB80   10F6           	JMP	PARS0	 		;
  CB82   0201 2D00      PARS0B	LI	R1,2D00H		;RESTORE CHAR 
                        ;
                        ;
  CB86   DCC1           PARS1	MOVB	R1,*R3+	
  CB88   0281 0D00      	CI	R1,0D00H 		;END OF LINE?
  CB8C   1321           	JEQ	PARSEND	 		;YES
  CB8E   0281 2000      	CI	R1,2000H 		;SPACE OR CTL CHAR?
  CB92   1B04           	JH	PARS2	 		;NO
  CB94   C000           	MOV	R0,R0	 		;YES,WORD SWITCH CLEAR?
  CB96   13D8           	JEQ	PARSLOOP	 		;YES,CONTINUE
  CB98   04C0           	CLR	R0	 		;NO,CLEAR IT AND CONTINUE
  CB9A   10D6           	JMP	PARSLOOP	
                        ;
  CB9C   C000           PARS2	MOV	R0,R0	 		;IS WORD SWITCH SET?
  CB9E   16D4           	JNE	PARSLOOP	 		;YES,CONTINUE
  CBA0   0700           	SETO	R0			;NO,SET IT
  CBA2   0602           	DEC	R2	 		;WILL NEXT PARM FIT PPTRS ARRAY?
  CBA4   1196           	JLT	PARMERR	 		;NO
                        ;
                        ;	LOAD NEXT PARM PTR
                        ;
  CBA6   2E04           	PUSH	R4	 		;SOURCE
  CBA8   2E03           	PUSH	R3	 		;DEST
  CBAA   0603           	DEC	R3	
  CBAC   D054           	MOVB	*R4,R1			;2ND SOURCE CHAR<=SPACE?
  CBAE   0281 2000      	CI	R1,2000H	
  CBB2   1506           	JGT	PARS3	 		;NO CAN'T BE NULL PARAMETER
  CBB4   9813 C312      	CB	*R3,@NULPARM			;1ST DEST CHAR A NULL PARAMETER?
  CBB8   1603           	JNE	PARS3	 		;NO
  CBBA   0201 2000      	LI	R1,2000H 		;YES,FORCE PARM DELIMITER
  CBBE   D4C1           	MOVB	R1,*R3	
  CBC0   C120 CF9E      PARS3	MOV	@PPADDR,R4	 
  CBC4   CD03           	MOV	R3,*R4+	
  CBC6   C804 CF9E      	MOV	R4,@PPADDR	
  CBCA   2E43           	POP	R3	 		;DEST
  CBCC   2E44           	POP	R4	 		;SOURCE
  CBCE   10BC           	JMP	PARSLOOP	
                        ;
                        ;-----TERMINATE	PARSING
                        ;
  CBD0   04E0 CF9E      PARSEND	CLR	@PPADDR			;CAP PPTRS WITH A NULL WORD
  CBD4   0460 C946      	B	@PFETCH	 		;GO PROCESS THE PROC
                        ;
                        ;----BLOCK	MOVE	ROUTINE
                        ;
  CBD8   DD33           BMOVE	MOVB	*R3+,*R4+	
  CBDA   0602           	DEC	R2	
  CBDC   16FD           	JNE	BMOVE	
  CBDE   2DC0           	RET	
                        ;
                        ;INPUT	CHAR INTO MSB OF R1
                        ;
  CBE0   0202 0001      INCHAR	LI	R2,CIN	 		; 
  CBE4   2DA0 D100      	CALL	@BDOS	 		;GET CHAR
  CBE8   06C1           	SWPB	R1			;PLACE CHAR IN MSB
  CBEA   2DC0           	RET	 		;
                        ;
                        ;	
                        ;   OUTPUT CHAR IN MSB OF R3 TO THE CONSOLE
                        ;   CHARACTER RETURNED IN MSB OF R1
                        ;   AUTO LF
                        ;
  CBEC   2E03           OUTCHAR	PUSH	R3			;SAVE CHAR
  CBEE   06C3           	SWPB	R3			;DOS PRINTS LSB BYTE
  CBF0   0202 0002      	LI	R2,COUT	 		;
  CBF4   2DA0 D100      	CALL	@BDOS
  CBF8   2E43           	POP	R3
  CBFA   9803 C30C      	CB	R3,@CR	 		;CR?
  CBFE   1609           	JNE	OUT0	 		;NO
  CC00   D0E0 C30D      	MOVB	@LF,R3	 		;YES,GENERATE LF
  CC04   06C3           	SWPB	R3			;DOS PRINTS LSB BYTE
  CC06   0202 0002      	LI	R2,COUT
  CC0A   2DA0 D100      	CALL	@BDOS
  CC0E   0203 0D0A      	LI	R3,0D0AH			;DONE FOR SHELL
  CC12   2DC0           OUT0	RET	
                        ;
                        ;----OUTPUT	A STRING TO THE CONSOLE
                        ;
  CC14   D0D4           OUTSTR	MOVB	*R4,R3
                        ;	SRL	R3,8 
  CC16   1304           	JEQ	STR0	
  CC18   0584           	INC	R4	
  CC1A   2DA0 CBEC      	CALL	@OUTCHAR	
  CC1E   10FA           	JMP	OUTSTR	
  CC20   2DC0           STR0	RET
                        ;
                        ;
                        ;----MISC	VARIABLES
                        ;
  CC22   0000           CMDADDR	WORD	0			;CUR CMDLINE ADDR
  CC24   0000           CMDBYTES	WORD	0	 		;CMDLINE BYTES LEFT
  CC26   0000           DOSV	WORD	0	 		;DOS WARM START VECTOR
  CC28   0000           HDERRV	WORD	0	 		;DOS HARD ERROR VECTOR
  CC2A   0000           DOSERRV	WORD	0	 		;DOS FILENAME ERROR VECTOR
  CC2C   0000           PROCSW	WORD	0			;PROC SWITCH
  CC2E   0000           SKIPSW	WORD	0			;SKIP NEXT PROC CMD
  CC30   0000           VSW	WORD	0			;VIEW SWITCH
  CC32   0000           NSW	WORD	0			;NO-EXECUTE SWITCH
  CC34   0000           SUBFLAG	WORD	0	 		;PARM SUBST FLAG
  CC36   0000           LADDR	WORD	0	;
                        ;
                        ;-----SHELL COMMAND LINE
                        ;
  CC38   0000           VMENTRY	WORD	0			;CONTROLS SMALL-VM PROG REENTRY FEATURE
  CC3A   2A42 4F4F      CMDLINE	TEXT	"*BOOT"
  CC3E   54             
  CC3F   0D00           	BYTE	0DH,00
  CC41                  	BSS	CLSZ	 		;COMMAND BUFF
  CC81   00             	EVEN
                        
                        	
                        ;
                        ;
                        ;----PROCEDURE	FDE & BUFFER FIELDS 
                        ;
  CC82                  	EVEN
  CC82                  MNAM	BSS	NAMSIZ			; 	 
  CC8D                  	BSS	2	 		;RIB
  CC8F   00             	EVEN		   
                        ;
  CC90   0000           MFTY	WORD	0			;
  CC92   0000           MFSZ	WORD	0			;SECTORS REMAINING 
  CC94   0000           MNRR	WORD	0	 		;NRR
  CC96   0000           MCBF	WORD	0
  CC98   0000           MTSC	WORD	0
  CC9A   0000           MDRV	WORD	0	 		;DRIVE #
  CC9C                  	BSS	8			;PART OF FRI (SPARE)	
  CCA4                  MBUF	BSS	BUFFSIZ+2			;PROC BUFFER 1 SECTOR
  CEA6   0000           MCNT	WORD	0			;BYTES LEFT IN BUFFER 
  CEA8   0000           MADDR	WORD	0			;CURRENT BUFFER BYTE ADDR 
                        ;
                        ;----MESSAGES
                        ;
  CEAA   0D0A           SINON	BYTE	0DH,0AH
  CEAC   5368 656C      	TEXT	'Shell Version 2.0'
  CEB0   6C20 5665      
  CEB4   7273 696F      
  CEB8   6E20 322E      
  CEBC   30             
  CEBD   0D0A           	BYTE	0DH,0AH
  CEBF   5265 6C65      	TEXT	'Release date 2 Oct 19'
  CEC3   6173 6520      
  CEC7   6461 7465      
  CECB   2032 204F      
  CECF   6374 2031      
  CED3   39             
  CED4   0D0A 00        	BYTE	0DH,0AH,0
                        ;
  CED7   00             NULLMSG 	BYTE 	0
                        ;
  CED8   3F             QUESTMSG 	TEXT 	"?"
  CED9   00             	BYTE	0
                        ;
  CEDA   5072 6F67      NESTMSG	TEXT	"Program name expected:"
  CEDE   7261 6D20      
  CEE2   6E61 6D65      
  CEE6   2065 7870      
  CEEA   6563 7465      
  CEEE   643A           
  CEF0   0D00           	BYTE 	0DH,00
                        ;
  CEF2   5368 656C      SHELLMSG 	TEXT 	"Shell error:"
  CEF6   6C20 6572      
  CEFA   726F 723A      
  CEFE   0D00           	BYTE	0DH,00H
                        ;
  CF00   0820 0800      RUBMSG	BYTE	08H,20H,08H,0
                        ;
  CF04   546F 6F20      PARMSG	TEXT	"Too many parameters:"
  CF08   6D61 6E79      
  CF0C   2070 6172      
  CF10   616D 6574      
  CF14   6572 733A      
  CF18   0D00           	BYTE	0DH,00
                        ;
  CF1A   4C69 6E65      LINEMSG	TEXT	"Line too long:"
  CF1E   2074 6F6F      
  CF22   206C 6F6E      
  CF26   673A           
  CF28   0D00           	BYTE	0DH,00
                        ;
  CF2A   4841 5244      HARDMSG	TEXT	"HARD DISK ERROR"
  CF2E   2044 4953      
  CF32   4B20 4552      
  CF36   524F 52        
  CF39   0D00           	BYTE	0DH,00
                        ;
  CF3B   2D2D 7761      WAITMSG	TEXT	"--waiting..."
  CF3F   6974 696E      
  CF43   672E 2E2E      
  CF47   00             	BYTE	0
                        ;
                        ;----PARAMETER	POINTERS,BUFFER	ETC.
                        ;
  CF48                  	EVEN
  CF48                  PPTRS	BSS	22	 	;11 WORDS 
  CF5E                  PBUF	BSS	64	 	;PARM BUUFER 
  CF9E   0000           PPADDR	WORD	0		;ADDR OF CUR PARM PTR
  CFA0                  WORKSP	BSS	32		;GENERAL SHELL WORKSPACE
  CFC0                  FCB	BSS	36 
                        ;
  CFE4                  	END	

No error(s).
LOOKERR          C45A  PBUF             CF5E  MNAM             CC82  SUBLOOP2         CA2A  
OUT0             CC12  SP               000A  EXIT             C7C6  GOLOOP           C4B4  
CCOUNT           C60C  CINLOOP          C50E  PARMSG           CF04  DLOOK1           C3D0  
FTY              000B  DLOOK2           C3D8  MOVERR           CA00  DLOOK3           C402  
NULLMSG          CED7  DLOOK4           C40A  R10              000A  DLOOK5           C3FA  
ERA0             C7E4  DLOOK6           C3EE  ERA2             C81E  DLOOK7           C3F6  
ERA4             C82A  FCB              CFC0  MNOFILE          C601  EXTSIZ           0003  
DSKSAVE          C6AC  FSB              000C  NAM0             C708  R12              000C  
NAM2             C728  OUTSTR           CC14  NAM1             C71C  MFTY             CC90  
NAM4             C720  TIMON            F000  ERAE             C84A  PLOOP            C95A  
PARS2            CB9C  SINON            CEAA  DSKDIR           C60E  PNAME            C654  
SADDR            C5B8  MONITOR          F000  LOOK             C3C0  SUBFLAG          CC34  
VIEW             CA66  LOAD0            C47A  BTDOCMD          CABE  BMOVE            CBD8  
DCOMR            0001  WRDATA           C78E  JUMP             C311  PNAME1           C666  
DOSV             CC26  PNAME2           C66C  DSKDIR1          C63E  PNAME3           C692  
WRITE            2F00  EXT              C313  RUBOUT           C570  NULPARM          C312  
CMDL_SIZE        00A2  OUTCHAR          CBEC  PAGCNT           C5B6  PARS0            CB6E  
WRITERR          C854  SKIPSW           CC2E  POPREG           2D40  PROMPT           C4FE  
MCBF             CC96  GO               C4CA  R1               0001  BPFETCH          CABA  
R3               0003  TPA              0100  R5               0005  BLKSIZ           0200  
R8               0008  BUFPNT           C5B4  MAKFIL           0016  PARS0A           CB72  
CALL             2D80  BDOSV            0084  CRLF             C5FE  PARS0B           CB82  
START02          C6C8  PARMERR          CAD2  R15              000F  CR               C30C  
CTLY             C307  CBN              0018  VMENTRY          CC38  PARSERR          C6A8  
FSZ              000E  BUFMOV4          C9FC  SPACE            C309  PARSLOOP         CB48  
R11              000B  CIN              0001  WAIT             CA8A  QUESTMSG         CED8  
SELDSK           000E  STOWIT           C530  BUFPUT           C9E2  MADDR            CEA8  
ATOD00           C88E  CRN              001A  ATOD04           C8A6  NAMSRCH          C74C  
PROCSW           CC2C  RUBMSG           CF00  CMDERR           CAC2  LARGERR          C872  
STRT01           C6EA  RET              2DC0  PUSHREG          2D00  CHKSYS           C380  
PAD              0000  NOTHEX           C8E8  VSW              CC30  NOSUB            CA46  
NULLPARM         CA4A  BUFFSIZ          0200  DEL              C30E  NESTMSG          CEDA  
BUFMOV3          C9DC  BDOS             D100  WRSEQ            0015  ERRMSG2          C8FC  
WP               000D  WORKSP           CFA0  INCHAR           CBE0  CATOH            C8B4  
NSW              CC32  ICMD0            C5C8  ATOD             C888  HDERR            0000  
ERRMSG1          C8EC  DOPROC           CB08  PPTRS            CF48  HARDERR          CADE  
NOFILE           C69E  BUFMOVE          C9AC  HARDMSG          CF2A  START00          C6C0  
PUSH             2E00  ECHO             C55E  CMDLINE          CC3A  LOAD             C45E  
NAM              0000  ICMDE            C5F8  LOAD2            C472  NULLERR          CAE4  
PEOL             CA50  RETURN           C4CE  PROM             C315  MBUF             CCA4  
NAM5             C768  STACKP           C2FE  ERA3             C822  SETDMA           001A  
DOSERRV          CC2A  HDERRV           CC28  LOOP             C8B6  NOTE             C314  
RHEX             2EC0  SWITCH           C5BA  GOTONE           C8DA  NEXTCMD          C4F4  
READ             2F40  DDEN             0001  BUFMOV2          C9D0  UNPROC           CAF6  
ERRMSG4          C91C  ERAFILE          C7D0  SHELLMSG         CEF2  DIREXIT          C694  
R2               0002  LF               C30D  R6               0006  RELB             001C  
RDSEQ            0014  LOAD1            C49E  EOF              C30F  BYTSEC           0200  
CTLX             C305  RELR             001E  POP              2E40  CMDPTR           00A0  
INIT22           C33C  CLOSERR          C864  MTSC             CC98  PARS1            CB86  
MFSZ             CC92  FREEMEM          00A6  GODOCMD          C588  DOCMD2A          C3A0  
WHEX             2E80  DOCMDAA          C394  PPADDR           CF9E  CONSOLE          0000  
COUT             0002  LINERR           CAC8  NESTERR          CAEA  SHELLBV          0080  
ERRMSG5          C92C  CKNSW            CA6E  WAITMSG          CF3B  ICMD             C5BC  
SUBLOOP          CA22  ERROUT           CAF0  STR0             CC20  CMDBYTES         CC24  
LINEMSG          CF1A  SEARCH1          0011  DEFDRV           0000  BUFVECT          00A4  
PROC             0005  SHELL            C300  NAM3             C75C  CLSZ             0040  
PFETCH           C946  ICLIST           C59A  ERA01            C7EC  FOPEN            000F  
DOSERR           0000  SUBMARK          C316  FCLOSE           0010  DSKDIR0          C624  
R0               0000  MKERR            C85A  R9               0009  CMDADDR          CC22  
CTLS             C306  ERAFIL           0013  FLA              0010  DOCMD            C368  
PARSEND          CBD0  PARSMSG          C86A  PARS3            CBC0  MKERR2           C878  
BAR              C5FA  CMDL_PTR         00A0  LADDR            CC36  DOSCMD           C318  
SYSFILE          C317  ERRMSG3          C90C  R14              000E  DOCMD1           C38A  
ERA1             C80A  DOCMD2           C39A  MNRR             CC94  DOCMD3           C3B6  
SEARCH2          0012  INIT             C31A  ICMD2            C5EC  PROCERR1         C9A8  
CTLC             C304  CIOERR           C596  MESG             2F80  DOCMD4           C3A4  
CMDCNT           0004  ICMD1            C5E8  GOPROG           C4AA  DOCMD9           C3BC  
EXEC             0002  WRDATAC          C7BA  MCNT             CEA6  ERAPERR          C7CC  
R4               0004  PROCERR0         C9A4  ATOD03           C8A2  NAMSIZ           000B  
PARMSUB          CA04  CTLZ             C308  BS               C30B  MDRV             CC9A  
SHELLERR         CAD8  TYPEFILE         C850  STOWIT2          C54A  COMT             C310  

